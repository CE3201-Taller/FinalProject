sub R8, R15,R15	;R8=0 
ldr R0, [R6] 	;leer Execute de MemDat pos 0 
subs R9, R0,#1	;comprobar R0-1=0
beq 0X14  		;branch a 0x14 (cargar operadores) si Execute = 1
b 0x00 			;while true, volver al inicio de instrucciones
add R6, R8,0x04	;Cargar direccion 04 en registro R6
ldr R1, [R6] 	;cargar MemDat pos 04(Operando A) en R1
add R6, R8,0x08	;Cargar direccion 08 en registro R6
ldr R2, [R6]	;cargar MemDat pos 2(Operando B) en R2
add R6, R8,0x0C	;Cargar direccion 0C en registro R6
ldr R3, [R6]	;cargar MemDat pos 3(Operacion) en R3
subs R9, R3,#1	;comprobar R3-1=0. R3 =1 para resta, R3=0 para suma 
beq 0x3C		;branch a linea 0x3C si R3=0 (si operacion=1, es decir resta)
add R5, R1, R2	;R5=(A+B). Operacion suma
b 	0x40		;branch	a linea 16 (almacenar resultado)
sub R5, R1, R2	;R5=(A-B). Operacion resta
add R6, R8,0x10	;Cargar direccion 0x10 en registro R6
str R5, [R6]	;almacenar R5 en MemDat pos 5
b 0x00			;while true, volver al inicio de las instrucciones


